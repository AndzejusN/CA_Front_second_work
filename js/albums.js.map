{"version":3,"file":"/js/albums.js","mappings":"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","sources":["webpack://clean/webpack/runtime/load script","webpack://clean/./resources/js/header.js","webpack://clean/webpack/bootstrap","webpack://clean/webpack/runtime/define property getters","webpack://clean/webpack/runtime/ensure chunk","webpack://clean/webpack/runtime/get javascript chunk filename","webpack://clean/webpack/runtime/get mini-css chunk filename","webpack://clean/webpack/runtime/hasOwnProperty shorthand","webpack://clean/webpack/runtime/make namespace object","webpack://clean/webpack/runtime/publicPath","webpack://clean/webpack/runtime/jsonp chunk loading","webpack://clean/./resources/js/functions.js","webpack://clean/../../../src/js/util/util.js","webpack://clean/../../../src/js/core/eventable.js","webpack://clean/../../../src/js/slide/placeholder.js","webpack://clean/../../../src/js/slide/content.js","webpack://clean/../../../src/js/util/viewport-size.js","webpack://clean/../../../src/js/slide/zoom-level.js","webpack://clean/../../../src/js/slide/loader.js","webpack://clean/../../../src/js/core/base.js","webpack://clean/../../../src/js/lightbox/lightbox.js","webpack://clean/./resources/js/albums.js"],"sourcesContent":["var inProgress = {};\nvar dataWebpackPrefix = \"clean:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","function createNavivation(ulNavigation) {\r\n\r\n    let pages = [\r\n        {\r\n            id: 1,\r\n            linkName: 'main',\r\n            url: 'index.html'\r\n        },\r\n        {\r\n            id: 2,\r\n            linkName: 'albums',\r\n            url: 'albums.html'\r\n        },\r\n        {\r\n            id: 3,\r\n            linkName: 'posts',\r\n            url: 'posts.html'\r\n        },\r\n        {\r\n            id: 4,\r\n            linkName: 'users',\r\n            url: 'users.html'\r\n        }\r\n    ];\r\n\r\n    pages.forEach(name => {\r\n\r\n        let li = document.createElement('li');\r\n        li.style.margin = '20px';\r\n        li.innerHTML = `<a href=\"./${name.url}\" style=\"text-decoration: none;\"> ${name.linkName.toUpperCase()} </a>`\r\n        ulNavigation.append(li);\r\n    })\r\n}\r\n\r\nfunction createSearchPlace(ulNavigation){\r\n\r\nlet searchForm = document.createElement('form');\r\nsearchForm.setAttribute('action', 'search.html');\r\nsearchForm.setAttribute('name', 'searchForm');\r\nsearchForm.style.margin = '20px';\r\nulNavigation.append(searchForm);\r\n\r\nlet inputSearch = document.createElement('input');\r\ninputSearch.setAttribute('type','text');\r\ninputSearch.setAttribute('name', 'inputSearch');\r\ninputSearch.setAttribute('id', 'inputSearch');\r\ninputSearch.setAttribute('placeholder', 'Please enter text...');\r\nsearchForm.append(inputSearch);\r\n\r\nlet submitButton = document.createElement('button');\r\nsubmitButton.setAttribute('type','submit');\r\nsubmitButton.textContent = 'Push the button';\r\nsubmitButton.style.marginLeft = '20px';\r\nsearchForm.append(submitButton);\r\n}\r\n\r\nfunction init(){\r\n\r\n    let divNavigation = document.createElement('div');\r\n    divNavigation.style.minHeight = '100px';\r\n    document.body.prepend(divNavigation)\r\n\r\n    let ulNavigation = document.createElement('ul');\r\n    ulNavigation.style.display = 'flex';\r\n    ulNavigation.style.flexWrap = 'wrap';\r\n    ulNavigation.style.listStyleType = 'none';\r\n    divNavigation.append(ulNavigation);\r\n\r\n    createNavivation(ulNavigation);\r\n    createSearchPlace(ulNavigation);\r\n}\r\n\r\ninit();\r\n\r\nexport default init;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames not based on template\n\tif (chunkId === 100) return \"js/posts/100.js\";\n\t// return url for filenames based on template\n\treturn undefined;\n};","// This function allow to reference all chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t10: 0,\n\t223: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkclean\"] = self[\"webpackChunkclean\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","export function firstLetterToUpperCase(text) {\r\n\r\n let firstLetter = text[0].toUpperCase();\r\n let withoutFirstLetter = text.slice(1);\r\n\r\nreturn firstLetter + withoutFirstLetter;\r\n}\r\n\r\nexport function getSearchPhrase(name){\r\n    const queryParams = document.location.search;\r\n    const urlParams = new URLSearchParams(queryParams);\r\n    const inputSearch = urlParams.get(name);\r\n\r\n    return inputSearch;\r\n}\r\n\r\nexport function waitingForDataSpinner() {\r\n\r\n    let spinner = document.querySelector('.loading');\r\n\r\n    if (spinner.style.display === 'none') {\r\n        spinner.style.display = 'block';\r\n    }\r\n    else {\r\n        spinner.style.display = 'none';   \r\n    }\r\n}","/** @typedef {import('../photoswipe.js').Point} Point */\r\n\r\n/** @typedef {undefined | null | false | '' | 0} Falsy */\r\n/** @typedef {keyof HTMLElementTagNameMap} HTMLElementTagName */\r\n\r\n/**\r\n * @template {HTMLElementTagName | Falsy} [T=\"div\"]\r\n * @template {Node | undefined} [NodeToAppendElementTo=undefined]\r\n * @param {string=} className\r\n * @param {T=} [tagName]\r\n * @param {NodeToAppendElementTo=} appendToEl\r\n * @returns {T extends HTMLElementTagName ? HTMLElementTagNameMap[T] : HTMLElementTagNameMap['div']}\r\n */\r\nexport function createElement(className, tagName, appendToEl) {\r\n  const el = document.createElement(tagName || 'div');\r\n  if (className) {\r\n    el.className = className;\r\n  }\r\n  if (appendToEl) {\r\n    appendToEl.appendChild(el);\r\n  }\r\n  // @ts-expect-error\r\n  return el;\r\n}\r\n\r\n/**\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n */\r\nexport function equalizePoints(p1, p2) {\r\n  p1.x = p2.x;\r\n  p1.y = p2.y;\r\n  if (p2.id !== undefined) {\r\n    p1.id = p2.id;\r\n  }\r\n  return p1;\r\n}\r\n\r\n/**\r\n * @param {Point} p\r\n */\r\nexport function roundPoint(p) {\r\n  p.x = Math.round(p.x);\r\n  p.y = Math.round(p.y);\r\n}\r\n\r\n/**\r\n * Returns distance between two points.\r\n *\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n */\r\nexport function getDistanceBetween(p1, p2) {\r\n  const x = Math.abs(p1.x - p2.x);\r\n  const y = Math.abs(p1.y - p2.y);\r\n  return Math.sqrt((x * x) + (y * y));\r\n}\r\n\r\n/**\r\n * Whether X and Y positions of points are qual\r\n *\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n */\r\nexport function pointsEqual(p1, p2) {\r\n  return p1.x === p2.x && p1.y === p2.y;\r\n}\r\n\r\n/**\r\n * The float result between the min and max values.\r\n *\r\n * @param {number} val\r\n * @param {number} min\r\n * @param {number} max\r\n */\r\nexport function clamp(val, min, max) {\r\n  return Math.min(Math.max(val, min), max);\r\n}\r\n\r\n/**\r\n * Get transform string\r\n *\r\n * @param {number} x\r\n * @param {number=} y\r\n * @param {number=} scale\r\n */\r\nexport function toTransformString(x, y, scale) {\r\n  let propValue = 'translate3d('\r\n    + x + 'px,' + (y || 0) + 'px'\r\n    + ',0)';\r\n\r\n  if (scale !== undefined) {\r\n    propValue += ' scale3d('\r\n      + scale + ',' + scale\r\n      + ',1)';\r\n  }\r\n\r\n  return propValue;\r\n}\r\n\r\n/**\r\n * Apply transform:translate(x, y) scale(scale) to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {number} x\r\n * @param {number=} y\r\n * @param {number=} scale\r\n */\r\nexport function setTransform(el, x, y, scale) {\r\n  el.style.transform = toTransformString(x, y, scale);\r\n}\r\n\r\nconst defaultCSSEasing = 'cubic-bezier(.4,0,.22,1)';\r\n\r\n/**\r\n * Apply CSS transition to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {string=} prop CSS property to animate\r\n * @param {number=} duration in ms\r\n * @param {string=} ease CSS easing function\r\n */\r\nexport function setTransitionStyle(el, prop, duration, ease) {\r\n  // inOut: 'cubic-bezier(.4, 0, .22, 1)', // for \"toggle state\" transitions\r\n  // out: 'cubic-bezier(0, 0, .22, 1)', // for \"show\" transitions\r\n  // in: 'cubic-bezier(.4, 0, 1, 1)'// for \"hide\" transitions\r\n  el.style.transition = prop\r\n    ? (prop + ' ' + duration + 'ms ' + (ease || defaultCSSEasing))\r\n    : 'none';\r\n}\r\n\r\n/**\r\n * Apply width and height CSS properties to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {string | number} w\r\n * @param {string | number} h\r\n */\r\nexport function setWidthHeight(el, w, h) {\r\n  el.style.width = (typeof w === 'number') ? (w + 'px') : w;\r\n  el.style.height = (typeof h === 'number') ? (h + 'px') : h;\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} el\r\n */\r\nexport function removeTransitionStyle(el) {\r\n  setTransitionStyle(el);\r\n}\r\n\r\n/**\r\n * @param {HTMLImageElement} img\r\n * @returns {Promise<HTMLImageElement | void>}\r\n */\r\nexport function decodeImage(img) {\r\n  if ('decode' in img) {\r\n    return img.decode().catch(() => {});\r\n  }\r\n\r\n  if (img.complete) {\r\n    return Promise.resolve(img);\r\n  }\r\n\r\n  return new Promise((resolve, reject) => {\r\n    img.onload = () => resolve(img);\r\n    img.onerror = reject;\r\n  });\r\n}\r\n\r\n/** @typedef {LOAD_STATE[keyof LOAD_STATE]} LoadState */\r\n/** @type {{ IDLE: 'idle'; LOADING: 'loading'; LOADED: 'loaded'; ERROR: 'error' }} */\r\nexport const LOAD_STATE = {\r\n  IDLE: 'idle',\r\n  LOADING: 'loading',\r\n  LOADED: 'loaded',\r\n  ERROR: 'error',\r\n};\r\n\r\n\r\n/**\r\n * Check if click or keydown event was dispatched\r\n * with a special key or via mouse wheel.\r\n *\r\n * @param {MouseEvent | KeyboardEvent} e\r\n */\r\nexport function specialKeyUsed(e) {\r\n  if (e.which === 2 || e.ctrlKey || e.metaKey || e.altKey || e.shiftKey) {\r\n    return true;\r\n  }\r\n}\r\n\r\n/**\r\n * Parse `gallery` or `children` options.\r\n *\r\n * @param {import('../photoswipe.js').ElementProvider} option\r\n * @param {string=} legacySelector\r\n * @param {HTMLElement | Document} [parent]\r\n * @returns HTMLElement[]\r\n */\r\nexport function getElementsFromOption(option, legacySelector, parent = document) {\r\n  /** @type {HTMLElement[]} */\r\n  let elements = [];\r\n\r\n  if (option instanceof Element) {\r\n    elements = [option];\r\n  } else if (option instanceof NodeList || Array.isArray(option)) {\r\n    elements = Array.from(option);\r\n  } else {\r\n    const selector = typeof option === 'string' ? option : legacySelector;\r\n    if (selector) {\r\n      elements = Array.from(parent.querySelectorAll(selector));\r\n    }\r\n  }\r\n\r\n  return elements;\r\n}\r\n\r\n/**\r\n * Check if variable is PhotoSwipe class\r\n *\r\n * @param {any} fn\r\n */\r\nexport function isPswpClass(fn) {\r\n  return typeof fn === 'function'\r\n    && fn.prototype\r\n    && fn.prototype.goTo;\r\n}\r\n\r\n/**\r\n * Check if browser is Safari\r\n *\r\n * @returns {boolean}\r\n */\r\nexport function isSafari() {\r\n  return !!(navigator.vendor && navigator.vendor.match(/apple/i));\r\n}\r\n\r\n","/** @typedef {import('../lightbox/lightbox.js').default} PhotoSwipeLightbox */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../photoswipe.js').DataSource} DataSource */\r\n/** @typedef {import('../ui/ui-element.js').UIElementData} UIElementData */\r\n/** @typedef {import('../slide/content.js').default} ContentDefault */\r\n/** @typedef {import('../slide/slide.js').default} Slide */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n/** @typedef {import('../slide/zoom-level.js').default} ZoomLevel */\r\n/** @typedef {import('../slide/get-thumb-bounds.js').Bounds} Bounds */\r\n\r\n/**\r\n * Allow adding an arbitrary props to the Content\r\n * https://photoswipe.com/custom-content/#using-webp-image-format\r\n * @typedef {ContentDefault & Record<string, any>} Content\r\n */\r\n/** @typedef {{ x?: number; y?: number }} Point */\r\n\r\n/**\r\n * @typedef {Object} PhotoSwipeEventsMap https://photoswipe.com/events/\r\n *\r\n *\r\n * https://photoswipe.com/adding-ui-elements/\r\n *\r\n * @prop {undefined} uiRegister\r\n * @prop {{ data: UIElementData }} uiElementCreate\r\n *\r\n *\r\n * https://photoswipe.com/events/#initialization-events\r\n *\r\n * @prop {undefined} beforeOpen\r\n * @prop {undefined} firstUpdate\r\n * @prop {undefined} initialLayout\r\n * @prop {undefined} change\r\n * @prop {undefined} afterInit\r\n * @prop {undefined} bindEvents\r\n *\r\n *\r\n * https://photoswipe.com/events/#opening-or-closing-transition-events\r\n *\r\n * @prop {undefined} openingAnimationStart\r\n * @prop {undefined} openingAnimationEnd\r\n * @prop {undefined} closingAnimationStart\r\n * @prop {undefined} closingAnimationEnd\r\n *\r\n *\r\n * https://photoswipe.com/events/#closing-events\r\n *\r\n * @prop {undefined} close\r\n * @prop {undefined} destroy\r\n *\r\n *\r\n * https://photoswipe.com/events/#pointer-and-gesture-events\r\n *\r\n * @prop {{ originalEvent: PointerEvent }} pointerDown\r\n * @prop {{ originalEvent: PointerEvent }} pointerMove\r\n * @prop {{ originalEvent: PointerEvent }} pointerUp\r\n * @prop {{ bgOpacity: number }} pinchClose can be default prevented\r\n * @prop {{ panY: number }} verticalDrag can be default prevented\r\n *\r\n *\r\n * https://photoswipe.com/events/#slide-content-events\r\n *\r\n * @prop {{ content: Content }} contentInit\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoad can be default prevented\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoadImage can be default prevented\r\n * @prop {{ content: Content; slide: Slide; isError?: boolean }} loadComplete\r\n * @prop {{ content: Content; slide: Slide }} loadError\r\n * @prop {{ content: Content; width: number; height: number }} contentResize can be default prevented\r\n * @prop {{ content: Content; width: number; height: number; slide: Slide }} imageSizeChange\r\n * @prop {{ content: Content }} contentLazyLoad can be default prevented\r\n * @prop {{ content: Content }} contentAppend can be default prevented\r\n * @prop {{ content: Content }} contentActivate can be default prevented\r\n * @prop {{ content: Content }} contentDeactivate can be default prevented\r\n * @prop {{ content: Content }} contentRemove can be default prevented\r\n * @prop {{ content: Content }} contentDestroy can be default prevented\r\n *\r\n *\r\n * undocumented\r\n *\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} imageClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} bgClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} tapAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} doubleTapAction can be default prevented\r\n *\r\n * @prop {{ originalEvent: KeyboardEvent }} keydown can be default prevented\r\n * @prop {{ x: number; dragging: boolean }} moveMainScroll\r\n * @prop {{ slide: Slide }} firstZoomPan\r\n * @prop {{ slide: Slide, data: SlideData, index: number }} gettingData\r\n * @prop {undefined} beforeResize\r\n * @prop {undefined} resize\r\n * @prop {undefined} viewportSize\r\n * @prop {undefined} updateScrollOffset\r\n * @prop {{ slide: Slide }} slideInit\r\n * @prop {{ slide: Slide }} afterSetContent\r\n * @prop {{ slide: Slide }} slideLoad\r\n * @prop {{ slide: Slide }} appendHeavy can be default prevented\r\n * @prop {{ slide: Slide }} appendHeavyContent\r\n * @prop {{ slide: Slide }} slideActivate\r\n * @prop {{ slide: Slide }} slideDeactivate\r\n * @prop {{ slide: Slide }} slideDestroy\r\n * @prop {{ destZoomLevel: number, centerPoint: Point, transitionDuration: number | false }} beforeZoomTo\r\n * @prop {{ slide: Slide }} zoomPanUpdate\r\n * @prop {{ slide: Slide }} initialZoomPan\r\n * @prop {{ slide: Slide }} calcSlideSize\r\n * @prop {undefined} resolutionChanged\r\n * @prop {{ originalEvent: WheelEvent }} wheel can be default prevented\r\n * @prop {{ content: Content }} contentAppendImage can be default prevented\r\n * @prop {{ index: number; itemData: SlideData }} lazyLoadSlide can be default prevented\r\n * @prop {undefined} lazyLoad\r\n * @prop {{ slide: Slide }} calcBounds\r\n * @prop {{ zoomLevels: ZoomLevel, slideData: SlideData }} zoomLevelsUpdate\r\n *\r\n *\r\n * legacy\r\n *\r\n * @prop {undefined} init\r\n * @prop {undefined} initialZoomIn\r\n * @prop {undefined} initialZoomOut\r\n * @prop {undefined} initialZoomInEnd\r\n * @prop {undefined} initialZoomOutEnd\r\n * @prop {{ dataSource: DataSource, numItems: number }} numItems\r\n * @prop {{ itemData: SlideData; index: number }} itemData\r\n * @prop {{ index: number, itemData: SlideData, instance: PhotoSwipe }} thumbBounds\r\n */\r\n\r\n/**\r\n * @typedef {Object} PhotoSwipeFiltersMap https://photoswipe.com/filters/\r\n *\r\n * @prop {(numItems: number, dataSource: DataSource) => number} numItems\r\n * Modify the total amount of slides. Example on Data sources page.\r\n * https://photoswipe.com/filters/#numitems\r\n *\r\n * @prop {(itemData: SlideData, index: number) => SlideData} itemData\r\n * Modify slide item data. Example on Data sources page.\r\n * https://photoswipe.com/filters/#itemdata\r\n *\r\n * @prop {(itemData: SlideData, element: HTMLElement, linkEl: HTMLAnchorElement) => SlideData} domItemData\r\n * Modify item data when it's parsed from DOM element. Example on Data sources page.\r\n * https://photoswipe.com/filters/#domitemdata\r\n *\r\n * @prop {(clickedIndex: number, e: MouseEvent, instance: PhotoSwipeLightbox) => number} clickedIndex\r\n * Modify clicked gallery item index.\r\n * https://photoswipe.com/filters/#clickedindex\r\n *\r\n * @prop {(placeholderSrc: string | false, content: Content) => string | false} placeholderSrc\r\n * Modify placeholder image source.\r\n * https://photoswipe.com/filters/#placeholdersrc\r\n *\r\n * @prop {(isContentLoading: boolean, content: Content) => boolean} isContentLoading\r\n * Modify if the content is currently loading.\r\n * https://photoswipe.com/filters/#iscontentloading\r\n *\r\n * @prop {(isContentZoomable: boolean, content: Content) => boolean} isContentZoomable\r\n * Modify if the content can be zoomed.\r\n * https://photoswipe.com/filters/#iscontentzoomable\r\n *\r\n * @prop {(useContentPlaceholder: boolean, content: Content) => boolean} useContentPlaceholder\r\n * Modify if the placeholder should be used for the content.\r\n * https://photoswipe.com/filters/#usecontentplaceholder\r\n *\r\n * @prop {(isKeepingPlaceholder: boolean, content: Content) => boolean} isKeepingPlaceholder\r\n * Modify if the placeholder should be kept after the content is loaded.\r\n * https://photoswipe.com/filters/#iskeepingplaceholder\r\n *\r\n *\r\n * @prop {(contentErrorElement: HTMLElement, content: Content) => HTMLElement} contentErrorElement\r\n * Modify an element when the content has error state (for example, if image cannot be loaded).\r\n * https://photoswipe.com/filters/#contenterrorelement\r\n *\r\n * @prop {(element: HTMLElement, data: UIElementData) => HTMLElement} uiElement\r\n * Modify a UI element that's being created.\r\n * https://photoswipe.com/filters/#uielement\r\n *\r\n * @prop {(thumbnail: HTMLElement, itemData: SlideData, index: number) => HTMLElement} thumbEl\r\n * Modify the thubmnail element from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbel\r\n *\r\n * @prop {(thumbBounds: Bounds, itemData: SlideData, index: number) => Bounds} thumbBounds\r\n * Modify the thubmnail bounds from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbbounds\r\n *\r\n * @prop {(srcsetSizesWidth: number, content: Content) => number} srcsetSizesWidth\r\n *\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeFiltersMap} T\r\n * @typedef {{ fn: PhotoSwipeFiltersMap[T], priority: number }} Filter<T>\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {PhotoSwipeEventsMap[T] extends undefined ? PhotoSwipeEvent<T> : PhotoSwipeEvent<T> & PhotoSwipeEventsMap[T]} AugmentedEvent\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {(event: AugmentedEvent<T>) => void} EventCallback<T>\r\n */\r\n\r\n/**\r\n * Base PhotoSwipe event object\r\n *\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n */\r\nclass PhotoSwipeEvent {\r\n  /**\r\n   * @param {T} type\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   */\r\n  constructor(type, details) {\r\n    this.type = type;\r\n    if (details) {\r\n      Object.assign(this, details);\r\n    }\r\n  }\r\n\r\n  preventDefault() {\r\n    this.defaultPrevented = true;\r\n  }\r\n}\r\n\r\n/**\r\n * PhotoSwipe base class that can listen and dispatch for events.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox, extended by base.js\r\n */\r\nclass Eventable {\r\n  constructor() {\r\n    /**\r\n     * @type {{ [T in keyof PhotoSwipeEventsMap]?: ((event: AugmentedEvent<T>) => void)[] }}\r\n     */\r\n    this._listeners = {};\r\n\r\n    /**\r\n     * @type {{ [T in keyof PhotoSwipeFiltersMap]?: Filter<T>[] }}\r\n     */\r\n    this._filters = {};\r\n\r\n    /** @type {PhotoSwipe=} */\r\n    this.pswp = undefined;\r\n\r\n    /** @type {PhotoSwipeOptions} */\r\n    this.options = undefined;\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   * @param {number} priority\r\n   */\r\n  addFilter(name, fn, priority = 100) {\r\n    if (!this._filters[name]) {\r\n      this._filters[name] = [];\r\n    }\r\n\r\n    this._filters[name].push({ fn, priority });\r\n    this._filters[name].sort((f1, f2) => f1.priority - f2.priority);\r\n\r\n    if (this.pswp) {\r\n      this.pswp.addFilter(name, fn, priority);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   */\r\n  removeFilter(name, fn) {\r\n    if (this._filters[name]) {\r\n      // @ts-expect-error\r\n      this._filters[name] = this._filters[name].filter(filter => (filter.fn !== fn));\r\n    }\r\n\r\n    if (this.pswp) {\r\n      this.pswp.removeFilter(name, fn);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {Parameters<PhotoSwipeFiltersMap[T]>} args\r\n   * @returns {Parameters<PhotoSwipeFiltersMap[T]>[0]}\r\n   */\r\n  applyFilters(name, ...args) {\r\n    if (this._filters[name]) {\r\n      this._filters[name].forEach((filter) => {\r\n        // @ts-expect-error\r\n        args[0] = filter.fn.apply(this, args);\r\n      });\r\n    }\r\n    return args[0];\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {EventCallback<T>} fn\r\n   */\r\n  on(name, fn) {\r\n    if (!this._listeners[name]) {\r\n      this._listeners[name] = [];\r\n    }\r\n    this._listeners[name].push(fn);\r\n\r\n    // When binding events to lightbox,\r\n    // also bind events to PhotoSwipe Core,\r\n    // if it's open.\r\n    if (this.pswp) {\r\n      this.pswp.on(name, fn);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {EventCallback<T>} fn\r\n   */\r\n  off(name, fn) {\r\n    if (this._listeners[name]) {\r\n      // @ts-expect-error\r\n      this._listeners[name] = this._listeners[name].filter(listener => (fn !== listener));\r\n    }\r\n\r\n    if (this.pswp) {\r\n      this.pswp.off(name, fn);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   * @returns {AugmentedEvent<T>}\r\n   */\r\n  dispatch(name, details) {\r\n    if (this.pswp) {\r\n      return this.pswp.dispatch(name, details);\r\n    }\r\n\r\n    const event = /** @type {AugmentedEvent<T>} */ (new PhotoSwipeEvent(name, details));\r\n\r\n    if (!this._listeners) {\r\n      return event;\r\n    }\r\n\r\n    if (this._listeners[name]) {\r\n      this._listeners[name].forEach((listener) => {\r\n        listener.call(this, event);\r\n      });\r\n    }\r\n\r\n    return event;\r\n  }\r\n}\r\n\r\nexport default Eventable;\r\n","import { createElement, setWidthHeight, toTransformString } from '../util/util.js';\r\n\r\nclass Placeholder {\r\n  /**\r\n   * @param {string | false} imageSrc\r\n   * @param {HTMLElement} container\r\n   */\r\n  constructor(imageSrc, container) {\r\n    // Create placeholder\r\n    // (stretched thumbnail or simple div behind the main image)\r\n    this.element = createElement(\r\n      'pswp__img pswp__img--placeholder',\r\n      imageSrc ? 'img' : '',\r\n      container\r\n    );\r\n\r\n    if (imageSrc) {\r\n      /** @type {HTMLImageElement} */\r\n      (this.element).decoding = 'async';\r\n      /** @type {HTMLImageElement} */\r\n      (this.element).alt = '';\r\n      /** @type {HTMLImageElement} */\r\n      (this.element).src = imageSrc;\r\n      this.element.setAttribute('role', 'presentation');\r\n    }\r\n\r\n    this.element.setAttribute('aria-hidden', 'true');\r\n  }\r\n\r\n  /**\r\n   * @param {number} width\r\n   * @param {number} height\r\n   */\r\n  setDisplayedSize(width, height) {\r\n    if (!this.element) {\r\n      return;\r\n    }\r\n\r\n    if (this.element.tagName === 'IMG') {\r\n      // Use transform scale() to modify img placeholder size\r\n      // (instead of changing width/height directly).\r\n      // This helps with performance, specifically in iOS15 Safari.\r\n      setWidthHeight(this.element, 250, 'auto');\r\n      this.element.style.transformOrigin = '0 0';\r\n      this.element.style.transform = toTransformString(0, 0, width / 250);\r\n    } else {\r\n      setWidthHeight(this.element, width, height);\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    if (this.element.parentNode) {\r\n      this.element.remove();\r\n    }\r\n    this.element = null;\r\n  }\r\n}\r\n\r\nexport default Placeholder;\r\n","import { createElement, isSafari, LOAD_STATE, setWidthHeight } from '../util/util.js';\r\nimport Placeholder from './placeholder.js';\r\n\r\n/** @typedef {import('./slide.js').default} Slide */\r\n/** @typedef {import('./slide.js').SlideData} SlideData */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../util/util.js').LoadState} LoadState */\r\n\r\nclass Content {\r\n  /**\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {PhotoSwipe} instance PhotoSwipe or PhotoSwipeLightbox instance\r\n   * @param {number} index\r\n   */\r\n  constructor(itemData, instance, index) {\r\n    this.instance = instance;\r\n    this.data = itemData;\r\n    this.index = index;\r\n\r\n    /** @type {HTMLImageElement | HTMLDivElement} */\r\n    this.element = undefined;\r\n\r\n    this.displayedImageWidth = 0;\r\n    this.displayedImageHeight = 0;\r\n\r\n    this.width = Number(this.data.w) || Number(this.data.width) || 0;\r\n    this.height = Number(this.data.h) || Number(this.data.height) || 0;\r\n\r\n    this.isAttached = false;\r\n    this.hasSlide = false;\r\n    /** @type {LoadState} */\r\n    this.state = LOAD_STATE.IDLE;\r\n\r\n    if (this.data.type) {\r\n      this.type = this.data.type;\r\n    } else if (this.data.src) {\r\n      this.type = 'image';\r\n    } else {\r\n      this.type = 'html';\r\n    }\r\n\r\n    this.instance.dispatch('contentInit', { content: this });\r\n  }\r\n\r\n  removePlaceholder() {\r\n    if (this.placeholder && !this.keepPlaceholder()) {\r\n      // With delay, as image might be loaded, but not rendered\r\n      setTimeout(() => {\r\n        if (this.placeholder) {\r\n          this.placeholder.destroy();\r\n          this.placeholder = null;\r\n        }\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Preload content\r\n   *\r\n   * @param {boolean=} isLazy\r\n   * @param {boolean=} reload\r\n   */\r\n  load(isLazy, reload) {\r\n    if (this.slide && this.usePlaceholder()) {\r\n      if (!this.placeholder) {\r\n        const placeholderSrc = this.instance.applyFilters(\r\n          'placeholderSrc',\r\n          // use  image-based placeholder only for the first slide,\r\n          // as rendering (even small stretched thumbnail) is an expensive operation\r\n          (this.data.msrc && this.slide.isFirstSlide) ? this.data.msrc : false,\r\n          this\r\n        );\r\n        this.placeholder = new Placeholder(\r\n          placeholderSrc,\r\n          this.slide.container\r\n        );\r\n      } else {\r\n        const placeholderEl = this.placeholder.element;\r\n        // Add placeholder to DOM if it was already created\r\n        if (placeholderEl && !placeholderEl.parentElement) {\r\n          this.slide.container.prepend(placeholderEl);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.element && !reload) {\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentLoad', { content: this, isLazy }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.isImageContent()) {\r\n      this.element = createElement('pswp__img', 'img');\r\n      // Start loading only after width is defined, as sizes might depend on it.\r\n      // Due to Safari feature, we must define sizes before srcset.\r\n      if (this.displayedImageWidth) {\r\n        this.loadImage(isLazy);\r\n      }\r\n    } else {\r\n      this.element = createElement('pswp__content');\r\n      this.element.innerHTML = this.data.html || '';\r\n    }\r\n\r\n    if (reload && this.slide) {\r\n      this.slide.updateContentSize(true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Preload image\r\n   *\r\n   * @param {boolean} isLazy\r\n   */\r\n  loadImage(isLazy) {\r\n    const imageElement = /** @type HTMLImageElement */ (this.element);\r\n\r\n    if (this.instance.dispatch('contentLoadImage', { content: this, isLazy }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.updateSrcsetSizes();\r\n\r\n    if (this.data.srcset) {\r\n      imageElement.srcset = this.data.srcset;\r\n    }\r\n\r\n    imageElement.src = this.data.src;\r\n\r\n    imageElement.alt = this.data.alt || '';\r\n\r\n    this.state = LOAD_STATE.LOADING;\r\n\r\n    if (imageElement.complete) {\r\n      this.onLoaded();\r\n    } else {\r\n      imageElement.onload = () => {\r\n        this.onLoaded();\r\n      };\r\n\r\n      imageElement.onerror = () => {\r\n        this.onError();\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Assign slide to content\r\n   *\r\n   * @param {Slide} slide\r\n   */\r\n  setSlide(slide) {\r\n    this.slide = slide;\r\n    this.hasSlide = true;\r\n    this.instance = slide.pswp;\r\n\r\n    // todo: do we need to unset slide?\r\n  }\r\n\r\n  /**\r\n   * Content load success handler\r\n   */\r\n  onLoaded() {\r\n    this.state = LOAD_STATE.LOADED;\r\n\r\n    if (this.slide) {\r\n      this.instance.dispatch('loadComplete', { slide: this.slide, content: this });\r\n\r\n      // if content is reloaded\r\n      if (this.slide.isActive\r\n          && this.slide.heavyAppended\r\n          && !this.element.parentNode) {\r\n        this.append();\r\n        this.slide.updateContentSize(true);\r\n      }\r\n\r\n      if (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR) {\r\n        this.removePlaceholder();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Content load error handler\r\n   */\r\n  onError() {\r\n    this.state = LOAD_STATE.ERROR;\r\n\r\n    if (this.slide) {\r\n      this.displayError();\r\n      this.instance.dispatch('loadComplete', { slide: this.slide, isError: true, content: this });\r\n      this.instance.dispatch('loadError', { slide: this.slide, content: this });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean} If the content is currently loading\r\n   */\r\n  isLoading() {\r\n    return this.instance.applyFilters(\r\n      'isContentLoading',\r\n      this.state === LOAD_STATE.LOADING,\r\n      this\r\n    );\r\n  }\r\n\r\n  isError() {\r\n    return this.state === LOAD_STATE.ERROR;\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If the content is image\r\n   */\r\n  isImageContent() {\r\n    return this.type === 'image';\r\n  }\r\n\r\n  /**\r\n   * Update content size\r\n   *\r\n   * @param {Number} width\r\n   * @param {Number} height\r\n   */\r\n  setDisplayedSize(width, height) {\r\n    if (!this.element) {\r\n      return;\r\n    }\r\n\r\n    if (this.placeholder) {\r\n      this.placeholder.setDisplayedSize(width, height);\r\n    }\r\n\r\n    // eslint-disable-next-line max-len\r\n    if (this.instance.dispatch('contentResize', { content: this, width, height }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    setWidthHeight(this.element, width, height);\r\n\r\n    if (this.isImageContent() && !this.isError()) {\r\n      const isInitialSizeUpdate = (!this.displayedImageWidth && width);\r\n\r\n      this.displayedImageWidth = width;\r\n      this.displayedImageHeight = height;\r\n\r\n      if (isInitialSizeUpdate) {\r\n        this.loadImage(false);\r\n      } else {\r\n        this.updateSrcsetSizes();\r\n      }\r\n\r\n      if (this.slide) {\r\n        // eslint-disable-next-line max-len\r\n        this.instance.dispatch('imageSizeChange', { slide: this.slide, width, height, content: this });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If the content can be zoomed\r\n   */\r\n  isZoomable() {\r\n    return this.instance.applyFilters(\r\n      'isContentZoomable',\r\n      this.isImageContent() && (this.state !== LOAD_STATE.ERROR),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Update image srcset sizes attribute based on width and height\r\n   */\r\n  updateSrcsetSizes() {\r\n    // Handle srcset sizes attribute.\r\n    //\r\n    // Never lower quality, if it was increased previously.\r\n    // Chrome does this automatically, Firefox and Safari do not,\r\n    // so we store largest used size in dataset.\r\n    // Handle srcset sizes attribute.\r\n    //\r\n    // Never lower quality, if it was increased previously.\r\n    // Chrome does this automatically, Firefox and Safari do not,\r\n    // so we store largest used size in dataset.\r\n    if (this.data.srcset) {\r\n      const image = /** @type HTMLImageElement */ (this.element);\r\n      const sizesWidth = this.instance.applyFilters(\r\n        'srcsetSizesWidth',\r\n        this.displayedImageWidth,\r\n        this\r\n      );\r\n\r\n      if (!image.dataset.largestUsedSize\r\n          || sizesWidth > parseInt(image.dataset.largestUsedSize, 10)) {\r\n        image.sizes = sizesWidth + 'px';\r\n        image.dataset.largestUsedSize = String(sizesWidth);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If content should use a placeholder (from msrc by default)\r\n   */\r\n  usePlaceholder() {\r\n    return this.instance.applyFilters(\r\n      'useContentPlaceholder',\r\n      this.isImageContent(),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Preload content with lazy-loading param\r\n   */\r\n  lazyLoad() {\r\n    if (this.instance.dispatch('contentLazyLoad', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.load(true);\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If placeholder should be kept after content is loaded\r\n   */\r\n  keepPlaceholder() {\r\n    return this.instance.applyFilters(\r\n      'isKeepingPlaceholder',\r\n      this.isLoading(),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Destroy the content\r\n   */\r\n  destroy() {\r\n    this.hasSlide = false;\r\n    this.slide = null;\r\n\r\n    if (this.instance.dispatch('contentDestroy', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.remove();\r\n\r\n    if (this.placeholder) {\r\n      this.placeholder.destroy();\r\n      this.placeholder = null;\r\n    }\r\n\r\n    if (this.isImageContent() && this.element) {\r\n      this.element.onload = null;\r\n      this.element.onerror = null;\r\n      this.element = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Display error message\r\n   */\r\n  displayError() {\r\n    if (this.slide) {\r\n      /** @type {HTMLElement} */\r\n      let errorMsgEl = createElement('pswp__error-msg');\r\n      errorMsgEl.innerText = this.instance.options.errorMsg;\r\n      errorMsgEl = this.instance.applyFilters(\r\n        'contentErrorElement',\r\n        errorMsgEl,\r\n        this\r\n      );\r\n      this.element = createElement('pswp__content pswp__error-msg-container');\r\n      this.element.appendChild(errorMsgEl);\r\n      this.slide.container.innerText = '';\r\n      this.slide.container.appendChild(this.element);\r\n      this.slide.updateContentSize(true);\r\n      this.removePlaceholder();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the content\r\n   */\r\n  append() {\r\n    if (this.isAttached) {\r\n      return;\r\n    }\r\n\r\n    this.isAttached = true;\r\n\r\n    if (this.state === LOAD_STATE.ERROR) {\r\n      this.displayError();\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentAppend', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const supportsDecode = ('decode' in this.element);\r\n\r\n    if (this.isImageContent()) {\r\n      // Use decode() on nearby slides\r\n      //\r\n      // Nearby slide images are in DOM and not hidden via display:none.\r\n      // However, they are placed offscreen (to the left and right side).\r\n      //\r\n      // Some browsers do not composite the image until it's actually visible,\r\n      // using decode() helps.\r\n      //\r\n      // You might ask \"why dont you just decode() and then append all images\",\r\n      // that's because I want to show image before it's fully loaded,\r\n      // as browser can render parts of image while it is loading.\r\n      // We do not do this in Safari due to partial loading bug.\r\n      if (supportsDecode && this.slide && (!this.slide.isActive || isSafari())) {\r\n        this.isDecoding = true;\r\n        // purposefully using finally instead of then,\r\n        // as if srcset sizes changes dynamically - it may cause decode error\r\n        /** @type {HTMLImageElement} */\r\n        (this.element).decode().catch(() => {}).finally(() => {\r\n          this.isDecoding = false;\r\n          this.appendImage();\r\n        });\r\n      } else {\r\n        this.appendImage();\r\n      }\r\n    } else if (this.element && !this.element.parentNode) {\r\n      this.slide.container.appendChild(this.element);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Activate the slide,\r\n   * active slide is generally the current one,\r\n   * meaning the user can see it.\r\n   */\r\n  activate() {\r\n    if (this.instance.dispatch('contentActivate', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.slide) {\r\n      if (this.isImageContent() && this.isDecoding && !isSafari()) {\r\n        // add image to slide when it becomes active,\r\n        // even if it's not finished decoding\r\n        this.appendImage();\r\n      } else if (this.isError()) {\r\n        this.load(false, true); // try to reload\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deactivate the content\r\n   */\r\n  deactivate() {\r\n    this.instance.dispatch('contentDeactivate', { content: this });\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove the content from DOM\r\n   */\r\n  remove() {\r\n    this.isAttached = false;\r\n\r\n    if (this.instance.dispatch('contentRemove', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.element && this.element.parentNode) {\r\n      this.element.remove();\r\n    }\r\n\r\n    if (this.placeholder && this.placeholder.element) {\r\n      this.placeholder.element.remove();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the image content to slide container\r\n   */\r\n  appendImage() {\r\n    if (!this.isAttached) {\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentAppendImage', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    // ensure that element exists and is not already appended\r\n    if (this.slide && this.element && !this.element.parentNode) {\r\n      this.slide.container.appendChild(this.element);\r\n    }\r\n\r\n    if (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR) {\r\n      this.removePlaceholder();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Content;\r\n","/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n\r\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {PhotoSwipe} pswp\r\n */\r\nexport function getViewportSize(options, pswp) {\r\n  if (options.getViewportSizeFn) {\r\n    const newViewportSize = options.getViewportSizeFn(options, pswp);\r\n    if (newViewportSize) {\r\n      return newViewportSize;\r\n    }\r\n  }\r\n\r\n  return {\r\n    x: document.documentElement.clientWidth,\r\n\r\n    // TODO: height on mobile is very incosistent due to toolbar\r\n    // find a way to improve this\r\n    //\r\n    // document.documentElement.clientHeight - doesn't seem to work well\r\n    y: window.innerHeight\r\n  };\r\n}\r\n\r\n/**\r\n * Parses padding option.\r\n * Supported formats:\r\n *\r\n * // Object\r\n * padding: {\r\n *  top: 0,\r\n *  bottom: 0,\r\n *  left: 0,\r\n *  right: 0\r\n * }\r\n *\r\n * // A function that returns the object\r\n * paddingFn: (viewportSize, itemData, index) => {\r\n *  return {\r\n *    top: 0,\r\n *    bottom: 0,\r\n *    left: 0,\r\n *    right: 0\r\n *  };\r\n * }\r\n *\r\n * // Legacy variant\r\n * paddingLeft: 0,\r\n * paddingRight: 0,\r\n * paddingTop: 0,\r\n * paddingBottom: 0,\r\n *\r\n * @param {'left' | 'top' | 'bottom' | 'right'} prop\r\n * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n * @param {{ x?: number; y?: number }} viewportSize PhotoSwipe viewport size, for example: { x:800, y:600 }\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {number} index Slide index\r\n * @returns {number}\r\n */\r\nexport function parsePaddingOption(prop, options, viewportSize, itemData, index) {\r\n  /** @type {number} */\r\n  let paddingValue;\r\n\r\n  if (options.paddingFn) {\r\n    paddingValue = options.paddingFn(viewportSize, itemData, index)[prop];\r\n  } else if (options.padding) {\r\n    paddingValue = options.padding[prop];\r\n  } else {\r\n    const legacyPropName = 'padding' + prop[0].toUpperCase() + prop.slice(1);\r\n    // @ts-expect-error\r\n    if (options[legacyPropName]) {\r\n      // @ts-expect-error\r\n      paddingValue = options[legacyPropName];\r\n    }\r\n  }\r\n\r\n  return paddingValue || 0;\r\n}\r\n\r\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {{ x?: number; y?: number }} viewportSize\r\n * @param {SlideData} itemData\r\n * @param {number} index\r\n */\r\nexport function getPanAreaSize(options, viewportSize, itemData, index) {\r\n  return {\r\n    x: viewportSize.x\r\n      - parsePaddingOption('left', options, viewportSize, itemData, index)\r\n      - parsePaddingOption('right', options, viewportSize, itemData, index),\r\n    y: viewportSize.y\r\n      - parsePaddingOption('top', options, viewportSize, itemData, index)\r\n      - parsePaddingOption('bottom', options, viewportSize, itemData, index)\r\n  };\r\n}\r\n","const MAX_IMAGE_WIDTH = 4000;\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n\r\n/** @typedef {'fit' | 'fill' | number | ((zoomLevelObject: ZoomLevel) => number)} ZoomLevelOption */\r\n\r\n/**\r\n * Calculates zoom levels for specific slide.\r\n * Depends on viewport size and image size.\r\n */\r\nclass ZoomLevel {\r\n  /**\r\n   * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {number} index Slide index\r\n   * @param {PhotoSwipe=} pswp PhotoSwipe instance, can be undefined if not initialized yet\r\n   */\r\n  constructor(options, itemData, index, pswp) {\r\n    this.pswp = pswp;\r\n    this.options = options;\r\n    this.itemData = itemData;\r\n    this.index = index;\r\n  }\r\n\r\n  /**\r\n   * Calculate initial, secondary and maximum zoom level for the specified slide.\r\n   *\r\n   * It should be called when either image or viewport size changes.\r\n   *\r\n   * @param {number} maxWidth\r\n   * @param {number} maxHeight\r\n   * @param {{ x?: number; y?: number }} panAreaSize\r\n   */\r\n  update(maxWidth, maxHeight, panAreaSize) {\r\n    this.elementSize = {\r\n      x: maxWidth,\r\n      y: maxHeight\r\n    };\r\n\r\n    this.panAreaSize = panAreaSize;\r\n\r\n    const hRatio = this.panAreaSize.x / this.elementSize.x;\r\n    const vRatio = this.panAreaSize.y / this.elementSize.y;\r\n\r\n    this.fit = Math.min(1, hRatio < vRatio ? hRatio : vRatio);\r\n    this.fill = Math.min(1, hRatio > vRatio ? hRatio : vRatio);\r\n\r\n    // zoom.vFill defines zoom level of the image\r\n    // when it has 100% of viewport vertical space (height)\r\n    this.vFill = Math.min(1, vRatio);\r\n\r\n    this.initial = this._getInitial();\r\n    this.secondary = this._getSecondary();\r\n    this.max = Math.max(\r\n      this.initial,\r\n      this.secondary,\r\n      this._getMax()\r\n    );\r\n\r\n    this.min = Math.min(\r\n      this.fit,\r\n      this.initial,\r\n      this.secondary\r\n    );\r\n\r\n    if (this.pswp) {\r\n      this.pswp.dispatch('zoomLevelsUpdate', { zoomLevels: this, slideData: this.itemData });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parses user-defined zoom option.\r\n   *\r\n   * @private\r\n   * @param {'initial' | 'secondary' | 'max'} optionPrefix Zoom level option prefix (initial, secondary, max)\r\n   */\r\n  _parseZoomLevelOption(optionPrefix) {\r\n    // eslint-disable-next-line max-len\r\n    const optionName = /** @type {'initialZoomLevel' | 'secondaryZoomLevel' | 'maxZoomLevel'} */ (optionPrefix + 'ZoomLevel');\r\n    const optionValue = this.options[optionName];\r\n\r\n    if (!optionValue) {\r\n      return;\r\n    }\r\n\r\n    if (typeof optionValue === 'function') {\r\n      return optionValue(this);\r\n    }\r\n\r\n    if (optionValue === 'fill') {\r\n      return this.fill;\r\n    }\r\n\r\n    if (optionValue === 'fit') {\r\n      return this.fit;\r\n    }\r\n\r\n    return Number(optionValue);\r\n  }\r\n\r\n  /**\r\n   * Get zoom level to which image will be zoomed after double-tap gesture,\r\n   * or when user clicks on zoom icon,\r\n   * or mouse-click on image itself.\r\n   * If you return 1 image will be zoomed to its original size.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getSecondary() {\r\n    let currZoomLevel = this._parseZoomLevelOption('secondary');\r\n\r\n    if (currZoomLevel) {\r\n      return currZoomLevel;\r\n    }\r\n\r\n    // 3x of \"fit\" state, but not larger than original\r\n    currZoomLevel = Math.min(1, this.fit * 3);\r\n\r\n    if (currZoomLevel * this.elementSize.x > MAX_IMAGE_WIDTH) {\r\n      currZoomLevel = MAX_IMAGE_WIDTH / this.elementSize.x;\r\n    }\r\n\r\n    return currZoomLevel;\r\n  }\r\n\r\n  /**\r\n   * Get initial image zoom level.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getInitial() {\r\n    return this._parseZoomLevelOption('initial') || this.fit;\r\n  }\r\n\r\n  /**\r\n   * Maximum zoom level when user zooms\r\n   * via zoom/pinch gesture,\r\n   * via cmd/ctrl-wheel or via trackpad.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getMax() {\r\n    const currZoomLevel = this._parseZoomLevelOption('max');\r\n\r\n    if (currZoomLevel) {\r\n      return currZoomLevel;\r\n    }\r\n\r\n    // max zoom level is x4 from \"fit state\",\r\n    // used for zoom gesture and ctrl/trackpad zoom\r\n    return Math.max(1, this.fit * 4);\r\n  }\r\n}\r\n\r\nexport default ZoomLevel;\r\n","import { getViewportSize, getPanAreaSize } from '../util/viewport-size.js';\r\nimport ZoomLevel from './zoom-level.js';\r\n\r\n/** @typedef {import('./content.js').default} Content */\r\n/** @typedef {import('./slide.js').default} Slide */\r\n/** @typedef {import('./slide.js').SlideData} SlideData */\r\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../lightbox/lightbox.js').default} PhotoSwipeLightbox */\r\n\r\nconst MIN_SLIDES_TO_CACHE = 5;\r\n\r\n/**\r\n * Lazy-load an image\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {PhotoSwipe | PhotoSwipeLightbox | PhotoSwipeBase} instance PhotoSwipe instance\r\n * @param {number} index\r\n * @returns Image that is being decoded or false.\r\n */\r\nexport function lazyLoadData(itemData, instance, index) {\r\n  // src/slide/content/content.js\r\n  const content = instance.createContentFromData(itemData, index);\r\n\r\n  if (!content || !content.lazyLoad) {\r\n    return;\r\n  }\r\n\r\n  const { options } = instance;\r\n\r\n  // We need to know dimensions of the image to preload it,\r\n  // as it might use srcset and we need to define sizes\r\n  // @ts-expect-error should provide pswp instance?\r\n  const viewportSize = instance.viewportSize || getViewportSize(options, instance);\r\n  const panAreaSize = getPanAreaSize(options, viewportSize, itemData, index);\r\n\r\n  const zoomLevel = new ZoomLevel(options, itemData, -1);\r\n  zoomLevel.update(content.width, content.height, panAreaSize);\r\n\r\n  content.lazyLoad();\r\n  content.setDisplayedSize(\r\n    Math.ceil(content.width * zoomLevel.initial),\r\n    Math.ceil(content.height * zoomLevel.initial)\r\n  );\r\n\r\n  return content;\r\n}\r\n\r\n\r\n/**\r\n * Lazy-loads specific slide.\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * By default it loads image based on viewport size and initial zoom level.\r\n *\r\n * @param {number} index Slide index\r\n * @param {PhotoSwipe | PhotoSwipeLightbox} instance PhotoSwipe or PhotoSwipeLightbox eventable instance\r\n */\r\nexport function lazyLoadSlide(index, instance) {\r\n  const itemData = instance.getItemData(index);\r\n\r\n  if (instance.dispatch('lazyLoadSlide', { index, itemData }).defaultPrevented) {\r\n    return;\r\n  }\r\n\r\n  return lazyLoadData(itemData, instance, index);\r\n}\r\n\r\n\r\nclass ContentLoader {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    // Total amount of cached images\r\n    this.limit = Math.max(\r\n      pswp.options.preload[0] + pswp.options.preload[1] + 1,\r\n      MIN_SLIDES_TO_CACHE\r\n    );\r\n    /** @type {Content[]} */\r\n    this._cachedItems = [];\r\n  }\r\n\r\n  /**\r\n   * Lazy load nearby slides based on `preload` option.\r\n   *\r\n   * @param {number=} diff Difference between slide indexes that was changed recently, or 0.\r\n   */\r\n  updateLazy(diff) {\r\n    const { pswp } = this;\r\n\r\n    if (pswp.dispatch('lazyLoad').defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const { preload } = pswp.options;\r\n    const isForward = diff === undefined ? true : (diff >= 0);\r\n    let i;\r\n\r\n    // preload[1] - num items to preload in forward direction\r\n    for (i = 0; i <= preload[1]; i++) {\r\n      this.loadSlideByIndex(pswp.currIndex + (isForward ? i : (-i)));\r\n    }\r\n\r\n    // preload[0] - num items to preload in backward direction\r\n    for (i = 1; i <= preload[0]; i++) {\r\n      this.loadSlideByIndex(pswp.currIndex + (isForward ? (-i) : i));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} index\r\n   */\r\n  loadSlideByIndex(index) {\r\n    index = this.pswp.getLoopedIndex(index);\r\n    // try to get cached content\r\n    let content = this.getContentByIndex(index);\r\n    if (!content) {\r\n      // no cached content, so try to load from scratch:\r\n      content = lazyLoadSlide(index, this.pswp);\r\n      // if content can be loaded, add it to cache:\r\n      if (content) {\r\n        this.addToCache(content);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Slide} slide\r\n   */\r\n  getContentBySlide(slide) {\r\n    let content = this.getContentByIndex(slide.index);\r\n    if (!content) {\r\n      // create content if not found in cache\r\n      content = this.pswp.createContentFromData(slide.data, slide.index);\r\n      if (content) {\r\n        this.addToCache(content);\r\n      }\r\n    }\r\n\r\n    if (content) {\r\n      // assign slide to content\r\n      content.setSlide(slide);\r\n    }\r\n    return content;\r\n  }\r\n\r\n  /**\r\n   * @param {Content} content\r\n   */\r\n  addToCache(content) {\r\n    // move to the end of array\r\n    this.removeByIndex(content.index);\r\n    this._cachedItems.push(content);\r\n\r\n    if (this._cachedItems.length > this.limit) {\r\n      // Destroy the first content that's not attached\r\n      const indexToRemove = this._cachedItems.findIndex((item) => {\r\n        return !item.isAttached && !item.hasSlide;\r\n      });\r\n      if (indexToRemove !== -1) {\r\n        const removedItem = this._cachedItems.splice(indexToRemove, 1)[0];\r\n        removedItem.destroy();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes an image from cache, does not destroy() it, just removes.\r\n   *\r\n   * @param {number} index\r\n   */\r\n  removeByIndex(index) {\r\n    const indexToRemove = this._cachedItems.findIndex(item => item.index === index);\r\n    if (indexToRemove !== -1) {\r\n      this._cachedItems.splice(indexToRemove, 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} index\r\n   */\r\n  getContentByIndex(index) {\r\n    return this._cachedItems.find(content => content.index === index);\r\n  }\r\n\r\n  destroy() {\r\n    this._cachedItems.forEach(content => content.destroy());\r\n    this._cachedItems = null;\r\n  }\r\n}\r\n\r\nexport default ContentLoader;\r\n","import Eventable from './eventable.js';\r\nimport {\r\n  getElementsFromOption\r\n} from '../util/util.js';\r\nimport Content from '../slide/content.js';\r\nimport { lazyLoadData } from '../slide/loader.js';\r\n\r\n/** @typedef {import(\"../photoswipe.js\").default} PhotoSwipe */\r\n/** @typedef {import(\"../photoswipe.js\").PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import(\"../slide/slide.js\").SlideData} SlideData */\r\n\r\n/**\r\n * PhotoSwipe base class that can retrieve data about every slide.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox\r\n */\r\nclass PhotoSwipeBase extends Eventable {\r\n  /**\r\n   * Get total number of slides\r\n   *\r\n   * @returns {number}\r\n   */\r\n  getNumItems() {\r\n    let numItems;\r\n    const { dataSource } = this.options;\r\n    if (!dataSource) {\r\n      numItems = 0;\r\n    } else if ('length' in dataSource) {\r\n      // may be an array or just object with length property\r\n      numItems = dataSource.length;\r\n    } else if ('gallery' in dataSource) {\r\n      // query DOM elements\r\n      if (!dataSource.items) {\r\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\r\n      }\r\n\r\n      if (dataSource.items) {\r\n        numItems = dataSource.items.length;\r\n      }\r\n    }\r\n\r\n    // legacy event, before filters were introduced\r\n    const event = this.dispatch('numItems', {\r\n      dataSource,\r\n      numItems\r\n    });\r\n    return this.applyFilters('numItems', event.numItems, dataSource);\r\n  }\r\n\r\n  /**\r\n   * @param {SlideData} slideData\r\n   * @param {number} index\r\n   */\r\n  createContentFromData(slideData, index) {\r\n    // @ts-expect-error\r\n    return new Content(slideData, this, index);\r\n  }\r\n\r\n  /**\r\n   * Get item data by index.\r\n   *\r\n   * \"item data\" should contain normalized information that PhotoSwipe needs to generate a slide.\r\n   * For example, it may contain properties like\r\n   * `src`, `srcset`, `w`, `h`, which will be used to generate a slide with image.\r\n   *\r\n   * @param {number} index\r\n   */\r\n  getItemData(index) {\r\n    const { dataSource } = this.options;\r\n    let dataSourceItem;\r\n    if (Array.isArray(dataSource)) {\r\n      // Datasource is an array of elements\r\n      dataSourceItem = dataSource[index];\r\n    } else if (dataSource && dataSource.gallery) {\r\n      // dataSource has gallery property,\r\n      // thus it was created by Lightbox, based on\r\n      // gallery and children options\r\n\r\n      // query DOM elements\r\n      if (!dataSource.items) {\r\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\r\n      }\r\n\r\n      dataSourceItem = dataSource.items[index];\r\n    }\r\n\r\n    let itemData = dataSourceItem;\r\n\r\n    if (itemData instanceof Element) {\r\n      itemData = this._domElementToItemData(itemData);\r\n    }\r\n\r\n    // Dispatching the itemData event,\r\n    // it's a legacy verion before filters were introduced\r\n    const event = this.dispatch('itemData', {\r\n      itemData: itemData || {},\r\n      index\r\n    });\r\n\r\n    return this.applyFilters('itemData', event.itemData, index);\r\n  }\r\n\r\n  /**\r\n   * Get array of gallery DOM elements,\r\n   * based on childSelector and gallery element.\r\n   *\r\n   * @param {HTMLElement} galleryElement\r\n   */\r\n  _getGalleryDOMElements(galleryElement) {\r\n    if (this.options.children || this.options.childSelector) {\r\n      return getElementsFromOption(\r\n        this.options.children,\r\n        this.options.childSelector,\r\n        galleryElement\r\n      ) || [];\r\n    }\r\n\r\n    return [galleryElement];\r\n  }\r\n\r\n  /**\r\n   * Converts DOM element to item data object.\r\n   *\r\n   * @param {HTMLElement} element DOM element\r\n   */\r\n  // eslint-disable-next-line class-methods-use-this\r\n  _domElementToItemData(element) {\r\n    /** @type {SlideData} */\r\n    const itemData = {\r\n      element\r\n    };\r\n\r\n    // eslint-disable-next-line max-len\r\n    const linkEl = /** @type {HTMLAnchorElement} */ (element.tagName === 'A' ? element : element.querySelector('a'));\r\n\r\n    if (linkEl) {\r\n      // src comes from data-pswp-src attribute,\r\n      // if it's empty link href is used\r\n      itemData.src = linkEl.dataset.pswpSrc || linkEl.href;\r\n\r\n      if (linkEl.dataset.pswpSrcset) {\r\n        itemData.srcset = linkEl.dataset.pswpSrcset;\r\n      }\r\n\r\n      itemData.width = parseInt(linkEl.dataset.pswpWidth, 10);\r\n      itemData.height = parseInt(linkEl.dataset.pswpHeight, 10);\r\n\r\n      // support legacy w & h properties\r\n      itemData.w = itemData.width;\r\n      itemData.h = itemData.height;\r\n\r\n      if (linkEl.dataset.pswpType) {\r\n        itemData.type = linkEl.dataset.pswpType;\r\n      }\r\n\r\n      const thumbnailEl = element.querySelector('img');\r\n\r\n      if (thumbnailEl) {\r\n        // msrc is URL to placeholder image that's displayed before large image is loaded\r\n        // by default it's displayed only for the first slide\r\n        itemData.msrc = thumbnailEl.currentSrc || thumbnailEl.src;\r\n        itemData.alt = thumbnailEl.getAttribute('alt');\r\n      }\r\n\r\n      if (linkEl.dataset.pswpCropped || linkEl.dataset.cropped) {\r\n        itemData.thumbCropped = true;\r\n      }\r\n    }\r\n\r\n    return this.applyFilters('domItemData', itemData, element, linkEl);\r\n  }\r\n\r\n  /**\r\n   * Lazy-load by slide data\r\n   *\r\n   * @param {SlideData} itemData Data about the slide\r\n   * @param {number} index\r\n   * @returns Image that is being decoded or false.\r\n   */\r\n  lazyLoadData(itemData, index) {\r\n    return lazyLoadData(itemData, this, index);\r\n  }\r\n}\r\n\r\nexport default PhotoSwipeBase;\r\n","import {\r\n  specialKeyUsed,\r\n  getElementsFromOption,\r\n  isPswpClass\r\n} from '../util/util.js';\r\n\r\nimport PhotoSwipeBase from '../core/base.js';\r\nimport { lazyLoadSlide } from '../slide/loader.js';\r\n\r\n/**\r\n * @template T\r\n * @typedef {import('../types.js').Type<T>} Type<T>\r\n */\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../photoswipe.js').DataSource} DataSource */\r\n/** @typedef {import('../slide/content.js').default} Content */\r\n/** @typedef {import('../core/eventable.js').PhotoSwipeEventsMap} PhotoSwipeEventsMap */\r\n/** @typedef {import('../core/eventable.js').PhotoSwipeFiltersMap} PhotoSwipeFiltersMap */\r\n\r\n/**\r\n * @template T\r\n * @typedef {import('../core/eventable.js').EventCallback<T>} EventCallback<T>\r\n */\r\n\r\n/**\r\n * PhotoSwipe Lightbox\r\n *\r\n * - If user has unsupported browser it falls back to default browser action (just opens URL)\r\n * - Binds click event to links that should open PhotoSwipe\r\n * - parses DOM strcture for PhotoSwipe (retrieves large image URLs and sizes)\r\n * - Initializes PhotoSwipe\r\n *\r\n *\r\n * Loader options use the same object as PhotoSwipe, and supports such options:\r\n *\r\n * gallery - Element | Element[] | NodeList | string selector for the gallery element\r\n * children - Element | Element[] | NodeList | string selector for the gallery children\r\n *\r\n */\r\nclass PhotoSwipeLightbox extends PhotoSwipeBase {\r\n  /**\r\n   * @param {PhotoSwipeOptions} options\r\n   */\r\n  constructor(options) {\r\n    super();\r\n    /** @type {PhotoSwipeOptions} */\r\n    this.options = options || {};\r\n    this._uid = 0;\r\n  }\r\n\r\n  /**\r\n   * Initialize lightbox, should be called only once.\r\n   * It's not included in the main constructor, so you may bind events before it.\r\n   */\r\n  init() {\r\n    this.onThumbnailsClick = this.onThumbnailsClick.bind(this);\r\n\r\n    // Bind click events to each gallery\r\n    getElementsFromOption(this.options.gallery, this.options.gallerySelector)\r\n      .forEach((galleryElement) => {\r\n        galleryElement.addEventListener('click', this.onThumbnailsClick, false);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * @param {MouseEvent} e\r\n   */\r\n  onThumbnailsClick(e) {\r\n    // Exit and allow default browser action if:\r\n    if (specialKeyUsed(e) // ... if clicked with a special key (ctrl/cmd...)\r\n        || window.pswp // ... if PhotoSwipe is already open\r\n        || window.navigator.onLine === false) { // ... if offline\r\n      return;\r\n    }\r\n\r\n    // If both clientX and clientY are 0 or not defined,\r\n    // the event is likely triggered by keyboard,\r\n    // so we do not pass the initialPoint\r\n    //\r\n    // Note that some screen readers emulate the mouse position,\r\n    // so it's not ideal way to detect them.\r\n    //\r\n    let initialPoint = { x: e.clientX, y: e.clientY };\r\n\r\n    if (!initialPoint.x && !initialPoint.y) {\r\n      initialPoint = null;\r\n    }\r\n\r\n    let clickedIndex = this.getClickedIndex(e);\r\n    clickedIndex = this.applyFilters('clickedIndex', clickedIndex, e, this);\r\n    const dataSource = {\r\n      gallery: /** @type {HTMLElement} */ (e.currentTarget)\r\n    };\r\n\r\n    if (clickedIndex >= 0) {\r\n      e.preventDefault();\r\n      this.loadAndOpen(clickedIndex, dataSource, initialPoint);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get index of gallery item that was clicked.\r\n   *\r\n   * @param {MouseEvent} e click event\r\n   */\r\n  getClickedIndex(e) {\r\n    // legacy option\r\n    if (this.options.getClickedIndexFn) {\r\n      return this.options.getClickedIndexFn.call(this, e);\r\n    }\r\n\r\n    const clickedTarget = /** @type {HTMLElement} */ (e.target);\r\n    const childElements = getElementsFromOption(\r\n      this.options.children,\r\n      this.options.childSelector,\r\n      /** @type {HTMLElement} */ (e.currentTarget)\r\n    );\r\n    const clickedChildIndex = childElements.findIndex(\r\n      child => child === clickedTarget || child.contains(clickedTarget)\r\n    );\r\n\r\n    if (clickedChildIndex !== -1) {\r\n      return clickedChildIndex;\r\n    } else if (this.options.children || this.options.childSelector) {\r\n      // click wasn't on a child element\r\n      return -1;\r\n    }\r\n\r\n    // There is only one item (which is the gallery)\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Load and open PhotoSwipe\r\n   *\r\n   * @param {number} index\r\n   * @param {DataSource=} dataSource\r\n   * @param {{ x?: number; y?: number }} [initialPoint]\r\n   */\r\n  loadAndOpen(index, dataSource, initialPoint) {\r\n    // Check if the gallery is already open\r\n    if (window.pswp) {\r\n      return false;\r\n    }\r\n\r\n    // set initial index\r\n    this.options.index = index;\r\n\r\n    // define options for PhotoSwipe constructor\r\n    this.options.initialPointerPos = initialPoint;\r\n\r\n    this.shouldOpen = true;\r\n    this.preload(index, dataSource);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Load the main module and the slide content by index\r\n   *\r\n   * @param {number} index\r\n   * @param {DataSource=} dataSource\r\n   */\r\n  preload(index, dataSource) {\r\n    const { options } = this;\r\n\r\n    if (dataSource) {\r\n      options.dataSource = dataSource;\r\n    }\r\n\r\n    // Add the main module\r\n    /** @type {Promise<Type<PhotoSwipe>>[]} */\r\n    const promiseArray = [];\r\n\r\n    const pswpModuleType = typeof options.pswpModule;\r\n    if (isPswpClass(options.pswpModule)) {\r\n      promiseArray.push(Promise.resolve(/** @type {Type<PhotoSwipe>} */ (options.pswpModule)));\r\n    } else if (pswpModuleType === 'string') {\r\n      throw new Error('pswpModule as string is no longer supported');\r\n    } else if (pswpModuleType === 'function') {\r\n      promiseArray.push(/** @type {() => Promise<Type<PhotoSwipe>>} */ (options.pswpModule)());\r\n    } else {\r\n      throw new Error('pswpModule is not valid');\r\n    }\r\n\r\n    // Add custom-defined promise, if any\r\n    if (typeof options.openPromise === 'function') {\r\n      // allow developers to perform some task before opening\r\n      promiseArray.push(options.openPromise());\r\n    }\r\n\r\n    if (options.preloadFirstSlide !== false && index >= 0) {\r\n      this._preloadedContent = lazyLoadSlide(index, this);\r\n    }\r\n\r\n    // Wait till all promises resolve and open PhotoSwipe\r\n    const uid = ++this._uid;\r\n    Promise.all(promiseArray).then((iterableModules) => {\r\n      if (this.shouldOpen) {\r\n        const mainModule = iterableModules[0];\r\n        this._openPhotoswipe(mainModule, uid);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Type<PhotoSwipe> | { default: Type<PhotoSwipe> }} module\r\n   * @param {number} uid\r\n   */\r\n  _openPhotoswipe(module, uid) {\r\n    // Cancel opening if UID doesn't match the current one\r\n    // (if user clicked on another gallery item before current was loaded).\r\n    //\r\n    // Or if shouldOpen flag is set to false\r\n    // (developer may modify it via public API)\r\n    if (uid !== this._uid && this.shouldOpen) {\r\n      return;\r\n    }\r\n\r\n    this.shouldOpen = false;\r\n\r\n    // PhotoSwipe is already open\r\n    if (window.pswp) {\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Pass data to PhotoSwipe and open init\r\n     *\r\n     * @type {PhotoSwipe}\r\n     */\r\n    const pswp = typeof module === 'object'\r\n        ? new module.default(this.options) // eslint-disable-line\r\n        : new module(this.options); // eslint-disable-line\r\n\r\n    this.pswp = pswp;\r\n    window.pswp = pswp;\r\n\r\n    // map listeners from Lightbox to PhotoSwipe Core\r\n    /** @type {(keyof PhotoSwipeEventsMap)[]} */\r\n    (Object.keys(this._listeners)).forEach((name) => {\r\n      this._listeners[name].forEach((fn) => {\r\n        pswp.on(name, /** @type {EventCallback<typeof name>} */(fn));\r\n      });\r\n    });\r\n\r\n    // same with filters\r\n    /** @type {(keyof PhotoSwipeFiltersMap)[]} */\r\n    (Object.keys(this._filters)).forEach((name) => {\r\n      this._filters[name].forEach((filter) => {\r\n        pswp.addFilter(name, filter.fn, filter.priority);\r\n      });\r\n    });\r\n\r\n    if (this._preloadedContent) {\r\n      pswp.contentLoader.addToCache(this._preloadedContent);\r\n      this._preloadedContent = null;\r\n    }\r\n\r\n    pswp.on('destroy', () => {\r\n      // clean up public variables\r\n      this.pswp = null;\r\n      window.pswp = null;\r\n    });\r\n\r\n    pswp.init();\r\n  }\r\n\r\n  /**\r\n   * Unbinds all events, closes PhotoSwipe if it's open.\r\n   */\r\n  destroy() {\r\n    if (this.pswp) {\r\n      this.pswp.destroy();\r\n    }\r\n\r\n    this.shouldOpen = false;\r\n    this._listeners = null;\r\n\r\n    getElementsFromOption(this.options.gallery, this.options.gallerySelector)\r\n      .forEach((galleryElement) => {\r\n        galleryElement.removeEventListener('click', this.onThumbnailsClick, false);\r\n      });\r\n  }\r\n}\r\n\r\nexport default PhotoSwipeLightbox;\r\n","import headerNavigation from './header.js';\r\nimport { firstLetterToUpperCase } from './functions';\r\nimport { waitingForDataSpinner } from './functions';\r\nimport PhotoSwipeLightbox from '/photoswipe/dist/photoswipe-lightbox.esm.js';\r\n\r\nasync function init(){\r\n\r\n    await fetchData();\r\n    waitingForDataSpinner(); \r\n}\r\n\r\nasync function fetchData() {\r\n\r\nlet response = await fetch('https://jsonplaceholder.typicode.com/albums?_expand=user&_embed=photos');\r\nlet data = await response.json();\r\n\r\n        data.map(album => {\r\n            let numberOfPhotos = album.photos.length;\r\n            let firstPhotoAddress = album.photos[0].thumbnailUrl;\r\n            let albumsDataToDom = {\r\n                'userId': album.userId,\r\n                'albumId': album.id,\r\n                'title': album.title,\r\n                'userName': album.user.name,\r\n                'numberOfPhotos': numberOfPhotos,\r\n                'photoAddress': firstPhotoAddress\r\n            }\r\n\r\n            let photoes = [];\r\n            album.photos.map(photo => {\r\n                photoes.push(photo);\r\n            })\r\n\r\n            generateAlbumsList(albumsDataToDom);\r\n            generateAllPhotosList(photoes);\r\n\r\n        })\r\n    }\r\n\r\nfunction generateAlbumsList(albumsDataToDom) {\r\n    let leftColumn = document.querySelector('.left-column');\r\n\r\n    let divCard = document.createElement('div');\r\n    divCard.classList.add('card', 'card-parameters');\r\n    leftColumn.append(divCard);\r\n\r\n    let divCardHeader = document.createElement('div');\r\n    divCardHeader.classList.add('card-header');\r\n    divCardHeader.innerHTML = 'Album title: <a href=\"album.html?albumid=' + albumsDataToDom.albumId + '\">' + firstLetterToUpperCase(albumsDataToDom.title) + '</a>';\r\n    divCard.appendChild(divCardHeader)\r\n\r\n    let ul = document.createElement('ul');\r\n    ul.classList.add('list-group', 'list-group-flush');\r\n    divCard.appendChild(ul);\r\n\r\n    let liPostId = document.createElement('li');\r\n    liPostId.classList.add('list-group-item');\r\n    liPostId.textContent = 'User name: ' + albumsDataToDom.userName;\r\n    ul.appendChild(liPostId)\r\n\r\n    let liUserId = document.createElement('li');\r\n    liUserId.classList.add('list-group-item');\r\n    liUserId.innerHTML = '<img src=\"' + albumsDataToDom.photoAddress + '\" >' + '( ' + albumsDataToDom.numberOfPhotos + ' )';\r\n    ul.appendChild(liUserId)\r\n}\r\n\r\nfunction generateAllPhotosList(photoes) {\r\n\r\nphotoes.map(photo => {\r\n    let galeryBox = document.querySelector('#my-gallery');\r\n    galeryBox.style.textAlign = 'center';\r\n\r\n    let aTag =  document.createElement('a');\r\n    aTag.href = photo.url;\r\n    aTag.setAttribute('data-pswp-width', '600');\r\n    aTag.setAttribute('data-pswp-height', '600');\r\n    aTag.setAttribute('target', '_blank');\r\n    galeryBox.append(aTag);\r\n\r\n    let imgTag = document.createElement('img');\r\n    imgTag.src = photo.thumbnailUrl;\r\n    imgTag.alt = 'Test photo';\r\n\r\n    aTag.append(imgTag);\r\n})\r\n}\r\n\r\ninit();\r\n\r\nconst lightbox = new PhotoSwipeLightbox({\r\n    gallery: '#my-gallery',\r\n    children: 'a',\r\n    pswpModule: () => import('/photoswipe/dist/photoswipe.esm.js')\r\n});\r\n\r\nlightbox.init();\r\n"],"names":["inProgress","dataWebpackPrefix","init","divNavigation","document","createElement","style","minHeight","body","prepend","ulNavigation","display","flexWrap","listStyleType","append","id","linkName","url","forEach","name","li","margin","innerHTML","toUpperCase","createNavivation","searchForm","setAttribute","inputSearch","submitButton","textContent","marginLeft","createSearchPlace","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","d","definition","key","o","Object","defineProperty","enumerable","get","f","e","chunkId","Promise","all","keys","reduce","promises","u","miniCssF","obj","prop","prototype","hasOwnProperty","call","l","done","push","script","needAttach","scripts","getElementsByTagName","i","length","s","getAttribute","charset","timeout","nc","src","onScriptComplete","prev","event","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","fn","setTimeout","bind","type","target","head","appendChild","r","Symbol","toStringTag","value","p","installedChunks","j","installedChunkData","promise","resolve","reject","error","Error","errorType","realSrc","message","request","webpackJsonpCallback","parentChunkLoadingFunction","data","chunkIds","moreModules","runtime","some","chunkLoadingGlobal","self","waitingForDataSpinner","spinner","querySelector","className","tagName","appendToEl","el","setWidthHeight","w","h","width","height","LOAD_STATE","getElementsFromOption","option","legacySelector","parent","elements","Element","NodeList","Array","isArray","from","selector","querySelectorAll","isSafari","navigator","vendor","match","PhotoSwipeEvent","details","this","assign","defaultPrevented","Eventable","_listeners","_filters","pswp","options","priority","sort","f1","f2","addFilter","filter","removeFilter","args","apply","on","listener","off","dispatch","Placeholder","imageSrc","container","element","decoding","alt","scale","propValue","transformOrigin","transform","remove","Content","itemData","instance","index","displayedImageWidth","displayedImageHeight","Number","isAttached","hasSlide","state","content","placeholder","keepPlaceholder","destroy","isLazy","reload","slide","usePlaceholder","placeholderEl","parentElement","placeholderSrc","applyFilters","msrc","isFirstSlide","isImageContent","loadImage","html","updateContentSize","imageElement","updateSrcsetSizes","srcset","complete","onLoaded","onError","isActive","heavyAppended","removePlaceholder","displayError","isError","setDisplayedSize","isInitialSizeUpdate","image","sizesWidth","dataset","largestUsedSize","parseInt","sizes","String","load","isLoading","errorMsgEl","innerText","errorMsg","supportsDecode","isDecoding","decode","appendImage","parsePaddingOption","viewportSize","paddingValue","paddingFn","padding","legacyPropName","slice","ZoomLevel","maxWidth","maxHeight","panAreaSize","elementSize","x","y","hRatio","vRatio","fit","Math","min","fill","vFill","initial","_getInitial","secondary","_getSecondary","max","_getMax","zoomLevels","slideData","optionPrefix","optionName","optionValue","currZoomLevel","_parseZoomLevelOption","lazyLoadData","createContentFromData","lazyLoad","getViewportSizeFn","newViewportSize","documentElement","clientWidth","window","innerHeight","getViewportSize","getPanAreaSize","zoomLevel","update","ceil","PhotoSwipeLightbox","_uid","onThumbnailsClick","gallery","gallerySelector","galleryElement","addEventListener","which","ctrlKey","metaKey","altKey","shiftKey","specialKeyUsed","onLine","initialPoint","clientX","clientY","clickedIndex","getClickedIndex","dataSource","currentTarget","preventDefault","loadAndOpen","getClickedIndexFn","clickedTarget","clickedChildIndex","children","childSelector","findIndex","child","contains","initialPointerPos","shouldOpen","preload","promiseArray","pswpModuleType","pswpModule","goTo","openPromise","preloadFirstSlide","_preloadedContent","getItemData","lazyLoadSlide","uid","then","iterableModules","mainModule","_openPhotoswipe","contentLoader","addToCache","removeEventListener","numItems","items","_getGalleryDOMElements","dataSourceItem","_domElementToItemData","linkEl","pswpSrc","href","pswpSrcset","pswpWidth","pswpHeight","pswpType","thumbnailEl","currentSrc","pswpCropped","cropped","thumbCropped","fetchData","fetch","response","json","map","album","numberOfPhotos","photos","firstPhotoAddress","thumbnailUrl","albumsDataToDom","userId","title","user","photoes","photo","generateAlbumsList","generateAllPhotosList","leftColumn","divCard","classList","add","text","divCardHeader","albumId","ul","liPostId","userName","liUserId","photoAddress","galeryBox","textAlign","aTag","imgTag"],"sourceRoot":""}