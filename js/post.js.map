{"version":3,"file":"/js/post.js","mappings":"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","sources":["webpack://clean/./resources/js/header.js","webpack://clean/webpack/bootstrap","webpack://clean/./resources/js/functions.js","webpack://clean/./resources/js/post.js"],"sourcesContent":["function createNavivation(ulNavigation) {\r\n\r\n    let pages = [\r\n        {\r\n            id: 1,\r\n            linkName: 'main',\r\n            url: 'index.html'\r\n        },\r\n        {\r\n            id: 2,\r\n            linkName: 'albums',\r\n            url: 'albums.html'\r\n        },\r\n        {\r\n            id: 3,\r\n            linkName: 'posts',\r\n            url: 'posts.html'\r\n        },\r\n        {\r\n            id: 4,\r\n            linkName: 'users',\r\n            url: 'users.html'\r\n        }\r\n    ];\r\n\r\n    pages.forEach(name => {\r\n\r\n        let li = document.createElement('li');\r\n        li.style.margin = '20px';\r\n        li.innerHTML = `<a href=\"./${name.url}\" style=\"text-decoration: none;\"> ${name.linkName.toUpperCase()} </a>`\r\n        ulNavigation.append(li);\r\n    })\r\n}\r\n\r\nfunction createSearchPlace(ulNavigation){\r\n\r\nlet searchForm = document.createElement('form');\r\nsearchForm.setAttribute('action', 'search.html');\r\nsearchForm.setAttribute('name', 'searchForm');\r\nsearchForm.style.margin = '20px';\r\nulNavigation.append(searchForm);\r\n\r\nlet inputSearch = document.createElement('input');\r\ninputSearch.setAttribute('type','text');\r\ninputSearch.setAttribute('name', 'inputSearch');\r\ninputSearch.setAttribute('id', 'inputSearch');\r\ninputSearch.setAttribute('placeholder', 'Please enter text...');\r\nsearchForm.append(inputSearch);\r\n\r\nlet submitButton = document.createElement('button');\r\nsubmitButton.setAttribute('type','submit');\r\nsubmitButton.textContent = 'Push the button';\r\nsubmitButton.style.marginLeft = '20px';\r\nsearchForm.append(submitButton);\r\n}\r\n\r\nfunction init(){\r\n\r\n    let divNavigation = document.createElement('div');\r\n    divNavigation.style.minHeight = '100px';\r\n    document.body.prepend(divNavigation)\r\n\r\n    let ulNavigation = document.createElement('ul');\r\n    ulNavigation.style.display = 'flex';\r\n    ulNavigation.style.flexWrap = 'wrap';\r\n    ulNavigation.style.listStyleType = 'none';\r\n    divNavigation.append(ulNavigation);\r\n\r\n    createNavivation(ulNavigation);\r\n    createSearchPlace(ulNavigation);\r\n}\r\n\r\ninit();\r\n\r\nexport default init;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","export function firstLetterToUpperCase(text) {\r\n\r\n let firstLetter = text[0].toUpperCase();\r\n let withoutFirstLetter = text.slice(1);\r\n\r\nreturn firstLetter + withoutFirstLetter;\r\n}\r\n\r\nexport function getSearchPhrase(name){\r\n    const queryParams = document.location.search;\r\n    const urlParams = new URLSearchParams(queryParams);\r\n    const inputSearch = urlParams.get(name);\r\n\r\n    return inputSearch;\r\n}\r\n\r\nexport function waitingForDataSpinner() {\r\n\r\n    let spinner = document.querySelector('.loading');\r\n\r\n    if (spinner.style.display === 'none') {\r\n        spinner.style.display = 'block';\r\n    }\r\n    else {\r\n        spinner.style.display = 'none';   \r\n    }\r\n}","import headerNavigation from './header.js';\r\nimport { firstLetterToUpperCase } from './functions';\r\nimport { getSearchPhrase } from './functions';\r\n\r\nasync function init(){\r\n    const inputSearch = getSearchPhrase('postid');\r\n    await getOnePost(inputSearch);\r\n}\r\n\r\nasync function getOnePost(post = 1) {\r\n    let response = await fetch('https://jsonplaceholder.typicode.com/posts/' + post + '/?_expand=user&_embed=comments');\r\n    let postData = await response.json();\r\n\r\n            let postsDataToDom = {\r\n                'userId': postData.userId,\r\n                'postId': postData.id,\r\n                'title': postData.title,\r\n                'body': postData.body,\r\n                'username': postData.user.name\r\n            };\r\n\r\n            generatePostsList(postsDataToDom)\r\n\r\n            let comments = postData.comments;\r\n            comments.map(comment => {\r\n                let commentList = {\r\n                    'id': comment.id,\r\n                    'name': comment.name,\r\n                    'email': comment.email,\r\n                    'body': comment.body\r\n                }\r\n\r\n                addPostComments(commentList);\r\n            })\r\n        }\r\n\r\nfunction generatePostsList(postsDataToDom) {\r\n    let leftColumn = document.querySelector('.left-column');\r\n\r\n    let divCard = document.createElement('div');\r\n    divCard.classList.add('card', 'card-parameters', 'post-id-' + postsDataToDom.id);\r\n    leftColumn.append(divCard);\r\n\r\n    let divCardHeader = document.createElement('div');\r\n    divCardHeader.classList.add('card-header');\r\n    divCardHeader.innerHTML = 'Post title: <a href=\"#\">' + firstLetterToUpperCase(postsDataToDom.title) + '</a>';\r\n    divCard.appendChild(divCardHeader)\r\n\r\n    let ul = document.createElement('ul');\r\n    ul.classList.add('list-group', 'list-group-flush');\r\n    divCard.appendChild(ul);\r\n\r\n    let liUsername = document.createElement('li');\r\n    liUsername.classList.add('list-group-item');\r\n    liUsername.textContent = 'Post content: ' + firstLetterToUpperCase(postsDataToDom.body);\r\n    ul.appendChild(liUsername)\r\n\r\n    let liPostId = document.createElement('li');\r\n    liPostId.classList.add('list-group-item');\r\n    liPostId.textContent = 'Post id: ' + postsDataToDom.postId;\r\n    ul.appendChild(liPostId)\r\n\r\n    let liUserId = document.createElement('li');\r\n    liUserId.classList.add('list-group-item');\r\n    liUserId.textContent = 'User id: ' + postsDataToDom.userId;\r\n    ul.appendChild(liUserId);\r\n\r\n    let liUserName = document.createElement('li');\r\n    liUserName.classList.add('list-group-item');\r\n    liUserName.innerHTML ='User name: <a href=\"user.html\">' + postsDataToDom.username + '</a>';\r\n    ul.appendChild(liUserName);\r\n\r\n    let liUserAllPosts = document.createElement('li');\r\n    liUserAllPosts.classList.add('list-group-item');\r\n    liUserAllPosts.innerHTML ='<a href=\"posts.html\">Kiti autoriaus įrašai</a>';\r\n    ul.appendChild(liUserAllPosts);\r\n}\r\n\r\nfunction addPostComments(commentsList) {\r\n\r\n    let postById = document.querySelector(`.post-id-${commentsList.postId}`);\r\n\r\n    let divCardComment = document.createElement('div');\r\n    divCardComment.style.width = 'calc (100% - 50px)';\r\n    divCardComment.style.margin = '10px';\r\n    divCardComment.classList.add('card');\r\n    postById.append(divCardComment);\r\n\r\n    let divCardHeaderComment = document.createElement('div');\r\n    divCardHeaderComment.classList.add('card-header');\r\n    divCardHeaderComment.textContent = commentsList.name;\r\n    divCardComment.appendChild(divCardHeaderComment)\r\n\r\n    let ulComment = document.createElement('ul');\r\n    ulComment.classList.add('list-group', 'list-group-flush');\r\n    divCardHeaderComment.appendChild(ulComment);\r\n\r\n    let liFirstComment = document.createElement('li');\r\n    liFirstComment.classList.add('list-group-item');\r\n    liFirstComment.textContent = firstLetterToUpperCase(commentsList.body);\r\n    ulComment.appendChild(liFirstComment)\r\n\r\n    let liSecondComment = document.createElement('li');\r\n    liSecondComment.classList.add('list-group-item');\r\n    liSecondComment.textContent = commentsList.email;\r\n    ulComment.appendChild(liSecondComment)\r\n}\r\n\r\ninit();"],"names":["init","divNavigation","document","createElement","style","minHeight","body","prepend","ulNavigation","display","flexWrap","listStyleType","append","id","linkName","url","forEach","name","li","margin","innerHTML","toUpperCase","createNavivation","searchForm","setAttribute","inputSearch","submitButton","textContent","marginLeft","createSearchPlace","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","firstLetterToUpperCase","text","slice","getSearchPhrase","queryParams","location","search","URLSearchParams","get","i","getOnePost","post","fetch","response","json","postData","generatePostsList","userId","title","user","comments","map","comment","addPostComments","email","postsDataToDom","leftColumn","querySelector","divCard","classList","add","divCardHeader","appendChild","ul","liUsername","liPostId","postId","liUserId","liUserName","username","liUserAllPosts","commentsList","postById","divCardComment","width","divCardHeaderComment","ulComment","liFirstComment","liSecondComment"],"sourceRoot":""}